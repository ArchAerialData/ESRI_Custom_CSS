 When overriding styles, always test on multiple screen sizes. Changing heights or widths in desktop mode may cause mobile breakpoints to behave unexpectedly if the CSS relies on percentageâ€‘based calculations (for example height: calc(100% - 110px) [29] ). 
 4Â The userâ€™s custom CSS ( test_tellepsen.css ) 
 The provided stylesheet establishes a brand identity across the application and overrides several InstantÂ Apps defaults. Key features include: 
 Brand tokens â€“ Custom CSS variables ( --brand-red , --brand-gray-1 , --brand-navy-1 , etc.) define a palette of reds, grays and navy blues for reuse throughout the file. Animation speeds for the header and tabs are defined by variables ( --app-header-gradient-speed , --tab-gradient-speed ). Overlay logo URL and dimensions are also set via variables. 
 Header override â€“ Applies a redâ€‘toâ€‘gray animated gradient to instant-apps-header , sets foreground colours via Calcite variables and inserts a centred PNG logo with a drop shadow. Motion is disabled for users who prefer reduced animation. 
 Tab styling â€“ Replaces default tab backgrounds with semiâ€‘transparent white, defines a hover effect and creates an animated gradient for the selected tab via the tabRedShift keyframe. Idle and hover states for the tab bar are customised later in the file. 
 Cover page button â€“ Provides a gradient background, rounded corners and drop shadows for the calcite-button used on the landing page. The fallback anchor button receives matching styles. Focus and hover states are clearly defined to improve accessibility. 
 Tab strip background â€“ The bar behind the tabs uses a vertical gradient from navy to dark gray, includes a subtle inner shadow and ensures that overflow is visible and not clipped. 
 What can and cannot be overridden 
 Can override: Colours, gradients, borders and shadows of most topâ€‘level elements, including header backgrounds ( instant-apps-header ), navigation bars ( esri-portfolio-tabbed__tab-list , .esri-portfolio-carousel , .esri-portfolio-accordion ), tab items ( .esri-portfolio-tabbed-item ), description panel backgrounds, location panel colours, and the landing page button. Font sizes and spacing can be adjusted by targeting the appropriate classes ( .esri-page__title-text , .esri-portfolio-tabbed-item__item-title , etc.). 
 Can override via CSS variables: Many Calcite components expose variables prefixed --calcite-color-* , --calcite-font-size-* and --calcite-radius-* . Changing these variables inside the appropriate scope (e.g., instant-apps-header ) updates colours and typography for nested controls. 
 Requires ::part selectors: Components like instant-apps-header and calcite-button encapsulate their internals in Shadow DOM. Use ::part(container) and ::part(wrapper) on instant-apps-header and ::part(button) on calcite-button to style internal wrappers. The sample CSS demonstrates this approach. 
 Cannot override: Structural layout properties (e.g., absolute positioning, flex directions, viewport heights) should generally not be changed, as they are tightly coupled to responsive behaviour. Avoid overriding classes that control position , top , left , or transform unless you understand the impact. For example, .esri-portfolio-stage and .esri-portfolio-description rely on absolute positioning [12] [16] . Similarly, you cannot modify the internals of thirdâ€‘party iframes embedded in the stage. 
 5Â Practical tips for developing a custom CSS theme 
 Use variables consistently â€“ Define brand colours and animation durations at the top of your stylesheet as variables. This makes it easy to adjust the palette across the entire app. 
 Respect themes â€“ Test your overrides in both dark and light mode. The compiled CSS uses .calcite-mode-light and .calcite-mode-dark selectors to switch colours. Provide complementary colours in your overrides to ensure adequate contrast. 
 Leverage part selectors â€“ Whenever you are styling a Web Component ( instant-apps-header , calcite-button ), use the ::part() pseudoâ€‘element to target internal wrappers. Without it your rules will not penetrate the Shadow DOM. 
 Avoid layout breaks â€“ Keep the existing layout intact. Only change visual aspects (colours, shadows, border radii, typography) unless you are building a custom layout from scratch. Unexpected changes to sizing or positioning can lead to clipped content or broken responsiveness. 
 Test with long titles and many sections â€“ Portfolio apps can house many sections. Make sure your tab/accordion/carousel styles cope with long names, high item counts and mobile screens. Use overflow: visible to prevent clipping and avoid absolute widths. 
 6Â Conclusion 
 The ArcGIS Instant Apps Portfolio template exposes a rich set of CSS selectors that allow you to customise its appearance without altering the underlying application logic. By understanding how the cover page, header, navigation bars, stage and panels are structuredâ€”and by using CSS variables and part selectors for Web Componentsâ€”you can craft a polished, branded user experience. The accompanying test_tellepsen.css file serves as a concrete example of how to apply gradients, animations and custom colours to match corporate branding while preserving accessibility and responsiveness. 
 
 [1] [2] [3] [4] [5] [6] [7] [8] [9] [10] [11] [12] [13] [14] [15] [16] [17] [18] [19] [20] [21] [22] [23] [24] [25] [26] [27] [28] [29] aallc.maps.arcgis.com 
 https://aallc.maps.arcgis.com/apps/instant/portfolio/assets/index.064c98d1.css 
 

